@using AS.CMS.Domain.Common;
@using AS.CMS.Domain.Base;
@{
    Layout = "~/Views/Layout/_Main.cshtml";

    PagingFilter pageFilter = ViewBag.PageFilter;
    Module currentModule = ViewBag.CurrentModule;
}
@section CustomCSS
{
    @RenderSection("CustomCSS", false)
}
@section CustomJS
{
    <script src="@Url.Content("~/Assets/Scripts/View/listbase.js")"></script>
    @RenderSection("CustomJS", false)
}

<article class="content items-list-page">

        <div class="title-search-block">
            <div class="title-block">
                <div class="row">
                    <div class="col-md-6">
                        <h3 class="title">
                            @currentModule.Description
                            <a href="@Url.Action(string.Format("yeni-{0}-ekle", currentModule.FriendlyName), currentModule.FriendlyName)" class="btn btn-primary btn-sm rounded-s">
                                <i class="fa fa-pencil-square-o"></i> Yeni Ekle
                            </a>
                        </h3>
                        <p class="title-description">@Html.Raw(string.Format("{0} Listesi", currentModule.Description))</p>
                    </div>
                </div>
            </div>
            <div class="items-search">
                <div class="input-group">
                    <a data-toggle="modal" data-target="#search-modal" class="btn btn-warning btn-sm rounded-s">
                        <i class="fa fa-search"></i> Detaylı Arama
                    </a>
                </div>
            </div>
        </div>

        @Html.Hidden("SortField", pageFilter.SortField)
        @Html.Hidden("SortDirection", pageFilter.SortDirection)
        @Html.Hidden("PageCount", pageFilter.PageCount)
        @Html.Hidden("PageSize", pageFilter.PageSize)
        @Html.Hidden("PageIndex", pageFilter.PageIndex)
        @Html.Hidden("SearchText", pageFilter.SearchText)
        @RenderBody()

        <nav class="text-xs-right">
            <ul class="pagination">
                @for (int i = 1; i <= pageFilter.PageCount; i++)
                {
                    <li class="@(Html.Raw(i == pageFilter.PageIndex ? "page-item active" : "page-item"))">
                        <a class="page-link" data-pageindex="@i" href="#">
                            @i.ToString()
                        </a>
                    </li>
                }
            </ul>
        </nav>
</article>